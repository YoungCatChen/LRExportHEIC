name: CI

on: push
jobs:
  build:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - name: Cache .build folder
        uses: actions/cache@v2
        with:
          path: .build    
          key: ${{ runner.os }}-build-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: Print Xcode version
        run: xcodebuild -version
      - name: Build the plugin
        run: ./build.sh
      - name: Sign plugin executable
        run: ./sign_with_temp_keychain.sh plugin/ExportHEIC.lrplugin/LRExportHEIC
        env:
          SIGNING_CERT: ${{ secrets.SIGNING_CERT }}
          SIGNING_CERT_PASSWORD: ${{ secrets.SIGNING_CERT_PASSWORD }}
      - name: Notarize plugin executable
        run: ./notarize.sh plugin/ExportHEIC.lrplugin/LRExportHEIC
        env:
          API_KEY: ${{ secrets.API_KEY }}
          API_KEY_ISSUER: ${{ secrets.API_KEY_ISSUER }}
          API_KEY_ID: ${{ secrets.API_KEY_ID }}
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: plugin
          path: plugin
  release: 
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        id: download
        with: 
          name: plugin
      - name: List downloaded files
        run: ls -lR
      - name: Set executable bit in plugin executable
        run: chmod +x ExportHEIC.lrplugin/LRExportHEIC
      - uses: fnkr/github-action-ghr@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GHR_PATH: .
          GHR_COMPRESS: zip
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
